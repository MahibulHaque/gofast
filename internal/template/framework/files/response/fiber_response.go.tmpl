package response

import (
	"encoding/json"
	"net/http"
	"github.com/gofiber/fiber/v2"
)

func JSON(c *fiber.Ctx, status int, data any) error {
	return JSONWithHeaders(c, status, data, nil)
}

func JSONWithHeaders(c *fiber.Ctx, status int, data any, headers http.Header) error {
	js, err := json.MarshalIndent(data, "", "\t")
	if err != nil {
		return err
	}

	js = append(js, '\n')

	for key, values := range headers {
		for _, value := range values {
			c.Set(key, value)
		}
	}

	c.Set("Content-Type", "application/json")
	return c.Status(status).Send(js)
}

// Alternative: Use Fiber's built-in JSON methods (more idiomatic)
func JSONFiberStyle(c *fiber.Ctx, status int, data any) error {
	return c.Status(status).JSON(data)
}

func JSONWithHeadersFiberStyle(c *fiber.Ctx, status int, data any, headers http.Header) error {
	for key, values := range headers {
		for _, value := range values {
			c.Set(key, value)
		}
	}
	return c.Status(status).JSON(data)
}
